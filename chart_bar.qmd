---
title: "Bar charts"
---

# When to use bar charts

Bar charts are great when you want to compare counts or frequencies for a categorical variable. If you have categories that have very different frequencies (ex: 1,000 in one category and 10 in another), you might want to consider changing the scale and using proportions instead of counts in a bar chart.

If you're looking at categories for more than one variable (ex: race by gender), consider using small multiples. If possible, avoid using a clustered or stacked bar chart.

# R code

Get the packages that you need:

```{r 	message = FALSE, warning = FALSE, warn.conflicts = FALSE}
library(dplyr)
library(ggplot2)
library(ggtext)
library(grid)
library(gridExtra)
library(extrafont)
library(smcepi)
```

Load the data. For these charts, we'll use the R dataset called `HairEyeColor`. This data set has frequencies of hair and eye color combinations in a sample of 592 statistics students.

```{r}
# load data
data("HairEyeColor")

```

## Bar chart for one variable

A bar chart is great for looking at the distribution of the categories for a single variable. Make sure to order the variables on your x-axis in a logical way - usually by value or time - and use color to strategically convey a message.

Here's an example of how to use a bar chart to look at the distribution of eye color in the `HairEyeColor` dataset from R.

```{r}
# save the color(s) you want to use in the title and chart
brown_color <- "#873600"

# create the title
title <- gg_color_title("Brown eyes are most common",
                       c("Brown"), c(brown_color))

# create the plot
HairEyeColor %>%
  data.frame() %>%
  group_by(Eye) %>%
  summarize(freq = sum(Freq),
            .groups = "keep") %>%
  ungroup() %>% 
  ggplot(aes(x = Eye, 
             y = freq,
             fill = Eye)) +
  scale_fill_manual(values = c("Brown" = brown_color,
                               "Blue" = "#D5D8DC",
                               "Hazel" = "#D5D8DC",
                               "Green" = "#D5D8DC")) + 
  geom_bar(position = "dodge",
           stat = "identity") +
  labs(title = title) +
  theme_gg_smc() 
```

Note that the x-axis is sorted from largest to smallest. The order of the x-axis should either be by size or by some other characteristic (time) that is important to the data.

## Bar chart for more than 1 categorical variable

Let's say you want to look at the frequency of eye color among people with different hair colors. You should use one chart per hair color or eye color, also known as small multiples!

You might be tempted to use a clustered bar chart, but clustered bar charts are not conducive to comparing across categories. There might be a reason to use a 100% stacked bar chart, so we've included that code here too.

### Small multiples (preferred)

Small multiples are a great way to compare the distribution of a categorical variable across the categories of another variable. `facet_wrap()` from the `ggplot2` package makes it really easy to create small multiples.

```{r}
title <- gg_color_title("Brown eyes were most common among all hair colors, <br>
                        except blondes, for whom blue eyes were most common", 
                        c("most common", "most common"), c("#006cb6", "#006cb6"))

HairEyeColor %>%
  data.frame() %>%
  group_by(Hair, Eye) %>%
  summarize(freq = sum(Freq),
            .groups = "keep") %>%
  ungroup() %>%
  group_by(Hair) %>%
  mutate(all_hair = sum(freq),
         Percent = round(freq/all_hair, 2),
         val = case_when(Percent == max(Percent) ~ "high",
                         TRUE ~ "fine")) %>%
  ungroup() %>%  
  ggplot(aes(x = Percent, 
             y = Eye,
             fill = val)) +
  geom_bar(position = "dodge",
           stat = "identity") + 
  scale_fill_manual(values = c("high" = "#006cb6",
                               "fine" = "#D5D8DC")) +
  facet_wrap(~Hair,
             nrow = 1,
             ncol = 4) + 
  labs(title = title) + 
  scale_x_continuous(labels = scales::percent) + 
  theme_gg_smc(plot_lines = "none", legend_loc = "none")

```

### 100% Stacked bar chart (if needed)

If you really want to make a stacked bar chart, that can be an effective way of comparing the distribution of two categorical variables if there are not too many categories in the chart. Try to stick to 4 or fewer categories in each of your bars. Anything more than that will make comparison really difficult.

```{r}
title <- "Brown eyes were most common among all hair colors, <br> except blondes, for whom blue eyes were most common"

HairEyeColor %>%
  data.frame() %>%
  group_by(Hair, Eye) %>%
  summarize(freq = sum(Freq),
            .groups = "keep") %>%
  ungroup() %>%
  group_by(Hair) %>%
  mutate(all_hair = sum(freq),
         Percent = round(freq/all_hair*100, 1),
         val = case_when(Percent == max(Percent) ~ "high",
                         TRUE ~ "fine")) %>%
  ungroup() %>%  
  ggplot(aes(x = Hair, 
             y = Percent,
             fill = Eye)) +
  geom_bar(position = "fill",
           stat = "identity") +
  scale_fill_viridis_d("Eye") + 
  labs(title = title) + 
  theme_gg_smc(plot_lines = "none", legend_loc = "top")


```
