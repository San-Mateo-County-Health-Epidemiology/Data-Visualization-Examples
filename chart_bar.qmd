---
title: "Bar charts"
---

# When to use bar charts

Bar charts are great when you want to compare counts or frequencies across groups. If you have groups that have very different values, you might want to consider changing the scale and using proportions instead. 

# R code

```{r setup}
knitr::opts_chunk$set(
	echo = TRUE,
	message = FALSE,
	warning = FALSE,
	warn.conflicts = FALSE
)
```

Get the packages that you need:

```{r }
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
```

Load the data. For these charts, we'll use the R dataset called `HairEyeColor`. This data set has frequencies of hair and eye color combinations in a sample of 592 statistics students.

```{r}
# load data
data("HairEyeColor")

# reshape the data
hair_eye_freq <- HairEyeColor %>%
  data.frame() %>%
  group_by(Hair, Eye) %>%
  summarize(freq = sum(Freq),
            .groups = "keep") %>%
  ungroup() %>%
  group_by(Hair) %>%
  mutate(total = sum(freq),
         prop = freq/total) %>%
  ungroup() 

# look at the data
glimpse(hair_eye_freq)
```
## Basic bar charts

### Clustered bar chart
```{r}
hair_eye_freq %>% 
  ggplot(aes(x = Hair, 
             y = prop,
             fill = Eye)) +
  geom_bar(position = "dodge",
           stat = "identity")
```

### Stacked bar chart
```{r}
hair_eye_freq %>% 
  ggplot(aes(x = Hair, 
             y = freq,
             fill = Eye)) +
  geom_bar(position = "stack",
           stat = "identity") 
```

### 100% stacked bar chart
```{r}
hair_eye_freq %>% 
  ggplot(aes(x = Hair, 
             y = freq,
             fill = Eye)) +
  geom_bar(position = "fill",
           stat = "identity")
```

## Formatting bar charts

The steps for formatting can be applied to any of the bar charts above. 

### Showing the distribution of one variable

```{r add in formatting}
eye_overall <- hair_eye_freq %>%
  select(Eye, freq) %>%
  group_by(Eye) %>%
  summarize(freq_eye = sum(freq),
            .groups = "keep") %>%
  ungroup() 

eye_overall %>%
  ggplot(aes(x = Eye, 
             y = freq_eye)) +
  geom_bar(position = "dodge",
           stat = "identity",
           fill = "#38939b") +
  theme_minimal() + 
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.major.y = element_blank(),
    axis.title = element_blank(),
    axis.text = element_text(face = "bold"),
    legend.title = element_text(face = "bold"),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_blank(),
    plot.title= element_text(face = "bold")
  ) + 
  geom_text(aes(x = Eye, 
                y = freq_eye,
                label = freq_eye),
    vjust = -0.1, fontface = "bold", color = "black", size = 4) +
  labs(title = "Distribution of Eye Color for all Students Surveyed")
```
```{r}
### fill by frequency ----
eye_overall %>%
  ggplot(aes(x = Eye, 
             y = freq_eye,
             fill = freq_eye)) +
  geom_bar(position = "dodge",
           stat = "identity") + 
  scale_fill_gradient(low = "white", high = "#006cb6")

### fill with a palette ----
eye_overall %>%
  ggplot(aes(x = Eye, 
             y = freq_eye,
             fill = Eye)) +
  geom_bar(position = "dodge",
           stat = "identity") + 
  scale_fill_brewer(palette = "Spectral")

```
### Manually assigning colors to each category category 

```{r}
hair_eye_freq %>% 
  ggplot(aes(x = Hair, 
             y = prop,
             fill = Eye)) +
  geom_bar(position = "dodge",
           stat = "identity") + 
  scale_fill_manual(values = c("Brown" = "#873600",
                               "Blue" = "#0288D1",
                               "Hazel" = "#CFD8DC",
                               "Green" = "#7CB342"),
                    name = "Eye Color") + 
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  theme_minimal() + 
  theme(
    legend.position = "bottom",
    panel.grid.minor = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.major.y = element_line(size = 0.25, color = "gray"),
    axis.title = element_blank(),
    axis.text = element_text(face = "bold"),
    legend.title = element_text(face = "bold"),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 10),
    plot.title= element_text(face = "bold")
  ) + 
  labs(title = "Distribution of Eye Color by Hair Color") +
  xlab("Hair Color") 
```



```{r}


### color based on values ---- 
hair_eye_freq %>%
  mutate(maj = case_when(prop > 0.5 ~ "majority",
                         TRUE ~ "minority")) %>%
  ggplot(aes(x = Hair, 
             y = prop,
             group = Eye,
             fill = maj)) +
  geom_bar(position = "dodge",
           stat = "identity",
           color = "black") +
  scale_fill_manual(values = c("majority" = "#0288D1",
                               "minority" = "#CFD8DC")) + 
  labs(title = "Frequency of Eye Color by Hair Color") + 
  theme(legend.title = element_blank())
```
