[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "chart_bar.html",
    "href": "chart_bar.html",
    "title": "Bar charts",
    "section": "",
    "text": "knitr::opts_chunk$set(message = FALSE, warning = FALSE)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.1\n\nlibrary(grid)\nlibrary(gridExtra)\n\nWarning: package 'gridExtra' was built under R version 4.3.1\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n# load data ----------------------------------\ndata(\"HairEyeColor\")\n\n## get it in the format we need ----\nhair_eye_freq &lt;- HairEyeColor %&gt;%\n  data.frame() %&gt;%\n  group_by(Hair, Eye) %&gt;%\n  summarize(freq = sum(Freq),\n            .groups = \"keep\") %&gt;%\n  ungroup() %&gt;%\n  group_by(Hair) %&gt;%\n  mutate(total = sum(freq),\n         prop = freq/total) %&gt;%\n  ungroup() \n\nprint(hair_eye_freq)\n\n# A tibble: 16 × 5\n   Hair  Eye    freq total   prop\n   &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 Black Brown    68   108 0.630 \n 2 Black Blue     20   108 0.185 \n 3 Black Hazel    15   108 0.139 \n 4 Black Green     5   108 0.0463\n 5 Brown Brown   119   286 0.416 \n 6 Brown Blue     84   286 0.294 \n 7 Brown Hazel    54   286 0.189 \n 8 Brown Green    29   286 0.101 \n 9 Red   Brown    26    71 0.366 \n10 Red   Blue     17    71 0.239 \n11 Red   Hazel    14    71 0.197 \n12 Red   Green    14    71 0.197 \n13 Blond Brown     7   127 0.0551\n14 Blond Blue     94   127 0.740 \n15 Blond Hazel    10   127 0.0787\n16 Blond Green    16   127 0.126 \n\n\n\n# make bar charts ----------------------------\n## basics ----\n### clustered ----\nhair_eye_freq %&gt;% \n  ggplot(aes(x = Hair, \n             y = prop,\n             fill = Eye)) +\n  geom_bar(position = \"dodge\",\n           stat = \"identity\")\n\n\n\n### stacked ----\nhair_eye_freq %&gt;% \n  ggplot(aes(x = Hair, \n             y = freq,\n             fill = Eye)) +\n  geom_bar(position = \"stack\",\n           stat = \"identity\") \n\n\n\n### 100% stacked ----\nhair_eye_freq %&gt;% \n  ggplot(aes(x = Hair, \n             y = freq,\n             fill = Eye)) +\n  geom_bar(position = \"fill\",\n           stat = \"identity\")\n\n\n\n\n\n## with all the formating ----\nhair_eye_freq %&gt;% \n  ggplot(aes(x = Hair, \n             y = prop,\n             fill = Eye)) +\n  geom_bar(position = \"dodge\",\n           stat = \"identity\") + \n  scale_fill_manual(values = c(\"Brown\" = \"#873600\",\n                               \"Blue\" = \"#0288D1\",\n                               \"Hazel\" = \"#CFD8DC\",\n                               \"Green\" = \"#7CB342\"),\n                    name = \"Eye Color\") + \n  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n  theme_minimal() + \n  theme(\n    legend.position = \"bottom\",\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(size = 0.25, color = \"gray\"),\n    axis.title = element_blank(),\n    axis.text = element_text(face = \"bold\"),\n    legend.title = element_text(face = \"bold\"),\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 10)\n  ) + \n  labs(title = \"Distribution of Eye Color by Hair Color\") +\n  xlab(\"Hair Color\") \n\n\n\n## formatting specific elements ----------\neye_overall &lt;- hair_eye_freq %&gt;%\n  select(Eye, freq) %&gt;%\n  group_by(Eye) %&gt;%\n  summarize(freq_eye = sum(freq),\n            .groups = \"keep\") %&gt;%\n  ungroup()\n\n### setting all bars to the same color with an outline ----\neye_overall %&gt;%\n  ggplot(aes(x = Eye, \n             y = freq_eye)) +\n  geom_bar(position = \"dodge\",\n           stat = \"identity\",\n           fill = \"#38939b\",\n           color = \"black\")  \n\n\n\n### fill by frequency ----\neye_overall %&gt;%\n  ggplot(aes(x = Eye, \n             y = freq_eye,\n             fill = freq_eye)) +\n  geom_bar(position = \"dodge\",\n           stat = \"identity\") + \n  scale_fill_gradient(low = \"white\", high = \"#006cb6\")\n\n\n\n### fill with a palette ----\neye_overall %&gt;%\n  ggplot(aes(x = Eye, \n             y = freq_eye,\n             fill = Eye)) +\n  geom_bar(position = \"dodge\",\n           stat = \"identity\") + \n  scale_fill_brewer(palette = \"Spectral\")\n\n\n\n### color based on values ---- \nhair_eye_freq %&gt;%\n  mutate(maj = case_when(prop &gt; 0.5 ~ \"majority\",\n                         TRUE ~ \"minority\")) %&gt;%\n  ggplot(aes(x = Hair, \n             y = prop,\n             group = Eye,\n             fill = maj)) +\n  geom_bar(position = \"dodge\",\n           stat = \"identity\",\n           color = \"black\") +\n  scale_fill_manual(values = c(\"majority\" = \"#0288D1\",\n                               \"minority\" = \"#CFD8DC\")) + \n  labs(title = \"Frequency of Eye Color by Hair Color\") + \n  theme(legend.title = element_blank())"
  },
  {
    "objectID": "chart_beeswarm.html",
    "href": "chart_beeswarm.html",
    "title": "Beeswarm Plots",
    "section": "",
    "text": "This code was adapted from Stephanie Evergreen’s Code for Beeswarm Plots. This article goes over the motivation for using a beeswarm plot in detail. The gist is that these are great charts when you want to compare a continuous variable across multiple categories."
  },
  {
    "objectID": "chart_beeswarm.html#beeswarm-plot",
    "href": "chart_beeswarm.html#beeswarm-plot",
    "title": "Beeswarm Plots",
    "section": "",
    "text": "This code was adapted from Stephanie Evergreen’s Code for Beeswarm Plots. This article goes over the motivation for using a beeswarm plot in detail. The gist is that these are great charts when you want to compare a continuous variable across multiple categories."
  },
  {
    "objectID": "chart_beeswarm.html#example-code",
    "href": "chart_beeswarm.html#example-code",
    "title": "Beeswarm Plots",
    "section": "Example code",
    "text": "Example code\n\nknitr::opts_chunk$set(\n    echo = TRUE,\n    message = FALSE,\n    warning = FALSE\n)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.1\n\nlibrary(grid)\nlibrary(gridExtra)\n\nWarning: package 'gridExtra' was built under R version 4.3.1\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n# load data ----\ndata(iris)\n\nMake a vertical beeswarm plot:\n\n# vertical beeswarm ----\n## make plot ----\nplot_vert &lt;- iris %&gt;% \n  ggplot(aes(x = Species, \n             y = Sepal.Length)) +\n  geom_point(\n    position = position_jitter(w = 1/6, h = 0),\n    size = 4, \n    color = \"#006cb6\", \n    alpha = 2/3\n  ) +\n  scale_y_continuous(\n    limits = c(4, 8),\n    breaks = seq(4, 8, 2)\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(size = 0.25, color = \"gray\"),\n    axis.title = element_blank(),\n    axis.text = element_text(face = \"bold\"),\n    axis.text.x = element_text(size = 12)\n  ) \nplot_vert\n\n\n\n\nAdd a title and some formatting to the vertical plot\n\nplot_title &lt;- textGrob(\n  label = \"Sepal Length of Iris Species\",\n  x = unit(0.2, \"lines\"), \n  y = unit(0.1, \"lines\"), \n  hjust = 0, \n  vjust = 0, \n  gp = gpar(fontsize = 18)\n)\n\nplot_complete &lt;- arrangeGrob(plot_vert, top = plot_title)\ngrid.arrange(plot_complete)\n\n\n\n\nMake a horizontal beeswarm plot Note: this is basically the same code as the vertical chart but the x and y variables are switched.\n\nplot_horiz &lt;- iris %&gt;% \n  ggplot(aes(x = Sepal.Length, \n             y = Species)) +\n  geom_point(\n    position = position_jitter(h = 1/6, w = 0),\n    size = 4, \n    color = \"#006cb6\", \n    alpha = 2/3\n  ) +\n  scale_x_continuous(\n    limits = c(4, 8),\n    breaks = seq(4, 8, 2)\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(size = 0.25, color = \"gray\"),\n    axis.title = element_blank(),\n    axis.text = element_text(face = \"bold\"),\n    axis.text.y = element_text(size = 12)\n  ) + \n  labs(title = \"Sepal Length of Iris Species\")\nplot_horiz\n\n\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "chart_small-multiples.html",
    "href": "chart_small-multiples.html",
    "title": "Small multiples",
    "section": "",
    "text": "knitr::opts_chunk$set(\n    echo = TRUE,\n    message = FALSE,\n    warning = FALSE,\n    warn.conflicts = FALSE\n)"
  },
  {
    "objectID": "chart_small-multiples.html#when-to-use-small-multiples",
    "href": "chart_small-multiples.html#when-to-use-small-multiples",
    "title": "Small multiples",
    "section": "When to use small multiples",
    "text": "When to use small multiples\nIf you’re trying to look at multiple categories for multiple subgroups over time, you might want to consider using small multiples instead of trying to cram everything into one chart. Presenting your data as a series of small charts, one per subgroup, allows viewers to more easily see the changes in each category per group and can allow them to effectively compare across groups.\nMaking a lot of small charts instead of one big might seem like it will take a long time, but luckily for us, the facet_wrap function exists. This allows you to quickly and easily create one chart per subgroup."
  },
  {
    "objectID": "chart_small-multiples.html#r-code",
    "href": "chart_small-multiples.html#r-code",
    "title": "Small multiples",
    "section": "R code",
    "text": "R code\nGet the packages that you need:\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(grid)\nlibrary(gridExtra)\n\nLoad the data. For this example, we’re using a filtered and summarized version of the California Department of Finance’s P-3 file from July, 2023.\n\nyear: this is the year for the population projection\nsex: this is sex and only includes male and female categories\nrace_cat: this is the single race/ethnicity value\npop_race_sex: this is the population of the race and sex group for each year (ex: Female American Indian/Alaskan Natives in 2010)\npop_race: this is the population of the race group for each year (ex: Male + Female American Indian/Alaskan Natives in 2010)\nprop: this is pop_race_sex/pop_race\n\n\ndof &lt;- read.csv(\"data//dof_estimates_sex_race.csv\")\n\nglimpse(dof)\n\nRows: 714\nColumns: 6\n$ year         &lt;int&gt; 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 201…\n$ sex          &lt;chr&gt; \"Female\", \"Female\", \"Female\", \"Female\", \"Female\", \"Female…\n$ race_cat     &lt;chr&gt; \"American Indian/Alaskan Native\", \"Asian\", \"Black\", \"Lati…\n$ pop_race_sex &lt;int&gt; 611, 94834, 9363, 90331, 11344, 5318, 154812, 565, 83512,…\n$ pop_race     &lt;int&gt; 1176, 178346, 19077, 183140, 22641, 10262, 306712, 1176, …\n$ prop         &lt;dbl&gt; 0.51956, 0.53174, 0.49080, 0.49323, 0.50104, 0.51822, 0.5…\n\n\nWe want to see how the proportion of female and male residents will change over time for each race/ethnicity group. If we were to put all of the lines on the same chart, it would be a mess:\n\nggplot(dof) +\n  geom_line(aes(x = year, y = prop, group = sex, color = sex), \n            size = 1.5)\n\n\n\n\nInstead, we can use small multiples and make one chart per race/ethnicity group.\nTo do this, we’ll use facet_wrap. The first argument is the categorical variable for which you want one chart per category. This variable should have a tilde (~) in front of it. Then you can use the ncol or nrow arugments to specify the number of rows or columns you want to display the small multiples. You can use both ncol and nrow if you want, but don’t need to use both.\n\nplot &lt;- ggplot(dof) +\n  geom_line(aes(x = year, y = prop, group = sex, color = sex), \n            size = 1.5) + \n  facet_wrap(~race_cat,\n             nrow = 4)\nplot\n\n\n\n\nNow, all that’s left is to make the chart look nicer.\nWe can set colors for the categories:\n\n# set the colors we want to use in our chart \nmale_color &lt;- \"#ffce00\"\nfemale_color &lt;- \"#006cb6\"\n\nplot1 &lt;- plot +\n  scale_color_manual(values = c(\"Female\" = female_color, \"Male\" = male_color))\nplot1\n\n\n\n\nHere we can specify we want the y values to appear as percents instead of decimals (labels = scales::percent) and can specify where we want lines to appear (breaks). We can also use the theme() function to specify if and how axis labels appear, if and how gridlines appear, legend position and background color.\n\nplot2 &lt;- plot1 +\n  scale_y_continuous(labels = scales::percent, \n                     breaks = 0.5) + \n  theme_minimal() + \n  theme(panel.grid.minor = element_blank(), \n        panel.grid.major.x = element_blank(), \n        panel.grid.major.y = element_line(size = 0.001, color = \"black\"), \n        axis.title = element_blank(), \n        axis.text = element_text(face = \"bold\"), \n        axis.text.x = element_text(size = 10), \n        strip.text.x = element_text(size = 11, face = \"bold\"), \n        legend.position = \"top\", \n        panel.background = element_rect(fill = \"#F8F9F9\", color = \"#F8F9F9\"))\nplot2\n\n\n\n\nLastly, we should add a title to the charts. You can use grobTree function from the grid package to make a pretty title with colors that match your chart. This code was adapted from Stephanie Evergreen.\n\n# make the title \nplot_title &lt;- grobTree(gp = gpar(fontsize = 14, fontface = \"bold\"), \n                       textGrob(label = \"Projected percentage of \", \n                                name = \"first_part\", \n                                x = unit(0.2, \"lines\"), \n                                y = unit(0.5, \"lines\"), \n                                hjust = 0, vjust = 0), \n                       textGrob(label = \"Female\", \n                                name = \"female\", \n                                x = grobWidth(\"first_part\") + unit(0.2, \"lines\"), \n                                y = unit(0.5, \"lines\"), \n                                hjust = 0, vjust = 0, \n                                gp = gpar(col = female_color)), \n                       textGrob(label = \" and \", \n                                name =\"second_part\", \n                                x = grobWidth(\"first_part\") + grobWidth(\"female\") + unit(0.2, \"lines\"), \n                                y = unit(0.5, \"lines\"), \n                                hjust = 0, vjust = 0), \n                       textGrob(label = \"Male\", \n                                name = \"male\", \n                                x = grobWidth(\"first_part\") + grobWidth(\"female\") + grobWidth(\"second_part\") + unit(0.2, \"lines\"), \n                                y = unit(0.5, \"lines\"), \n                                hjust = 0, vjust = 0, \n                                gp = gpar(col = male_color)), \n                       textGrob(label = \" residents by race/ethnicity.\", \n                                name = \"last_part\", \n                                x = grobWidth(\"first_part\") + grobWidth(\"female\") + grobWidth(\"second_part\") + grobWidth(\"male\") + unit(0.2, \"lines\"), \n                                y = unit(0.5, \"lines\"), \n                                hjust = 0, vjust = 0) )\n\n# add the title back to the chart\nplot3 &lt;- arrangeGrob(plot2, \n                     top = plot_title, \n                     padding = unit(2.6, \"line\"))\n\n\ngrid.arrange(plot3)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data-Visuzaliation-Examples",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  }
]